<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>It&#39;s Feifan</title>
  
  <subtitle>Your past will make sense in the end.</subtitle>
  <link href="https://feifankoo.github.io/atom.xml" rel="self"/>
  
  <link href="https://feifankoo.github.io/"/>
  <updated>2021-05-26T09:25:50.081Z</updated>
  <id>https://feifankoo.github.io/</id>
  
  <author>
    <name>Feifan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>正则表达式 cheat sheet</title>
    <link href="https://feifankoo.github.io/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8Fcheat%20sheet.html"/>
    <id>https://feifankoo.github.io/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8Fcheat%20sheet.html</id>
    <published>2021-05-25T16:00:00.000Z</published>
    <updated>2021-05-26T09:25:50.081Z</updated>
    
    <content type="html"><![CDATA[<p>工作中，经常会遇到从已有的字段中提取出一些特定信息的情况，比如从’sku:color-red;size-xs’这一串字符中提取出尺码xs。本篇用于记录和总结常用的正则表达式。</p><p>先给出几个很好用的网站，可以学习、创建、测试正则表达式。</p><blockquote><p><a href="https://regexr.com/">RegExr（英文版）</a></p></blockquote><blockquote><p><a href="https://regexr-cn.com/">RegExr（中文版）</a></p></blockquote><blockquote><p><a href="https://regex101.com/">Regex101</a></p></blockquote><h1 id="1-基本语法结构"><a href="#1-基本语法结构" class="headerlink" title="1.基本语法结构"></a>1.基本语法结构</h1><table><thead><tr><th>语法</th><th align="center">解释说明</th></tr></thead><tbody><tr><td>^</td><td align="center">匹配字符串的开头</td></tr><tr><td>$</td><td align="center">匹配字符串的结尾</td></tr><tr><td>\d</td><td align="center">匹配一个数字</td></tr><tr><td>+</td><td align="center">匹配前一个字符至少一次</td></tr><tr><td>?</td><td align="center">匹配前一个字符0次或1次</td></tr><tr><td>[0-9a-zA-Z\_]</td><td align="center">匹配一个数字，字母或下划线</td></tr><tr><td>[^xy]</td><td align="center">匹配除了x和y以外的任意字符</td></tr></tbody></table><h1 id="2-bigquery中的正则表达式应用"><a href="#2-bigquery中的正则表达式应用" class="headerlink" title="2.bigquery中的正则表达式应用"></a>2.bigquery中的正则表达式应用</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;工作中，经常会遇到从已有的字段中提取出一些特定信息的情况，比如从’sku:color-red;size-xs’这一串字符中提取出尺码xs。本篇用于记录和总结常用的正则表达式。&lt;/p&gt;
&lt;p&gt;先给出几个很好用的网站，可以学习、创建、测试正则表达式。&lt;/p&gt;
&lt;blockquo</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://feifankoo.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="正则表达式" scheme="https://feifankoo.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>AB test实践笔记</title>
    <link href="https://feifankoo.github.io/uncategorized/AB%20test%E5%AE%9E%E8%B7%B5%E7%AC%94%E8%AE%B0.html"/>
    <id>https://feifankoo.github.io/uncategorized/AB%20test%E5%AE%9E%E8%B7%B5%E7%AC%94%E8%AE%B0.html</id>
    <published>2021-05-21T08:11:06.000Z</published>
    <updated>2021-05-21T08:57:01.399Z</updated>
    
    <content type="html"><![CDATA[<p>想要优化推荐版块，</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;想要优化推荐版块，&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="工作记录" scheme="https://feifankoo.github.io/tags/%E5%B7%A5%E4%BD%9C%E8%AE%B0%E5%BD%95/"/>
    
    <category term="统计" scheme="https://feifankoo.github.io/tags/%E7%BB%9F%E8%AE%A1/"/>
    
    <category term="python" scheme="https://feifankoo.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python笔记本</title>
    <link href="https://feifankoo.github.io/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/python%E7%AC%94%E8%AE%B0%E6%9C%AC.html"/>
    <id>https://feifankoo.github.io/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/python%E7%AC%94%E8%AE%B0%E6%9C%AC.html</id>
    <published>2021-05-21T08:11:06.000Z</published>
    <updated>2021-05-23T15:29:44.140Z</updated>
    
    <content type="html"><![CDATA[<p>本篇整理了部分常用的pandas语句以及简单的数据处理过程。<br>其中包括：</p><ul><li>导入、导出文件</li><li>查看数据 基础信息</li><li>行列的增删查改和筛选</li><li>表连接</li><li>变量处理</li><li>数据分组groupby</li></ul><h1 id="导入-导出文件"><a href="#导入-导出文件" class="headerlink" title="导入/导出文件"></a>导入/导出文件</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> warnings</span><br><span class="line">warnings.filterwarnings(<span class="string">&#x27;ignore&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#改变当前工作目录</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.chdir(<span class="string">r&quot;C:\Users\Desktop\Python&quot;</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">#导入excel文件，指定列的变量类型</span></span><br><span class="line">df = pd.read_excel(<span class="string">&#x27;order.xlsx&#x27;</span>, dtype = &#123;<span class="string">&#x27;order_no&#x27;</span> : <span class="built_in">str</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 导出到excel文件</span></span><br><span class="line">df.to_excel(<span class="string">&#x27;date.xlsx&#x27;</span>, index=<span class="literal">False</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存到csv文件</span></span><br><span class="line">df.to_csv(<span class="string">&#x27;data.csv&#x27;</span>,index=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><h1 id="初步认识数据"><a href="#初步认识数据" class="headerlink" title="初步认识数据"></a>初步认识数据</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#显示所有的列</span></span><br><span class="line">pd.set_option(<span class="string">&#x27;display.max_columns&#x27;</span>, <span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看数据集基本信息</span></span><br><span class="line">data.info(verbose=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#检查是否有缺失值</span></span><br><span class="line">data.isnull().<span class="built_in">sum</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看数值变量的统计信息</span></span><br><span class="line">data.describe().T</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看所有的行数和列数</span></span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;Num of rows: &quot;</span> + <span class="built_in">str</span>(data.shape[<span class="number">0</span>])) </span><br><span class="line"><span class="built_in">print</span> (<span class="string">&quot;Num of columns: &quot;</span> + <span class="built_in">str</span>(data.shape[<span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment">#表格排序</span></span><br><span class="line">df = df.sort_values(by = [<span class="string">&#x27;date&#x27;</span>])</span><br><span class="line"></span><br><span class="line">df.sort_values(by=<span class="string">&#x27;price&#x27;</span>,ascending=<span class="literal">False</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看变量unique值的个数</span></span><br><span class="line">print(<span class="string">&quot;用户数为：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">len</span>(<span class="built_in">set</span>(data[<span class="string">&#x27;user_id&#x27;</span>]))))</span><br><span class="line">print(<span class="string">&quot;订单数为：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">len</span>(<span class="built_in">set</span>(data[<span class="string">&#x27;order_no&#x27;</span>]))))</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出某个变量的全部取值</span></span><br><span class="line"><span class="built_in">set</span>(data[<span class="string">&#x27;user&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出某个变量的全部取值</span></span><br><span class="line">data[<span class="string">&#x27;user&#x27;</span>].unique()</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看某个变量的取值及相应的数量</span></span><br><span class="line">data[<span class="string">&#x27;user&#x27;</span>].value_counts()</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看某个变量的非缺失值和缺失值数量分布</span></span><br><span class="line">data[<span class="string">&#x27;type&#x27;</span>].isnull().value_counts()</span><br><span class="line"></span><br><span class="line"><span class="comment">#计算某个变量的百分位数</span></span><br><span class="line">df[<span class="string">&#x27;物流时间&#x27;</span>].quantile(<span class="number">0.8</span>) </span><br></pre></td></tr></table></figure><h1 id="列操作-增删查改"><a href="#列操作-增删查改" class="headerlink" title="列操作-增删查改"></a>列操作-增删查改</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#重命名列</span></span><br><span class="line">data.columns = [<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;date&#x27;</span>, <span class="string">&#x27;type&#x27;</span>, <span class="string">&#x27;amount&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment">#重命名列</span></span><br><span class="line">data.rename(columns=&#123;<span class="string">&quot;type&quot;</span>:<span class="string">&quot;user_type&quot;</span>,<span class="string">&quot;n&quot;</span>:<span class="string">&quot;count&quot;</span>&#125;, inplace=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#删列</span></span><br><span class="line">to_drop = [<span class="string">&#x27;code&#x27;</span>,<span class="string">&#x27;phone&#x27;</span>]</span><br><span class="line">data2 = data.drop(to_drop, axis=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#删除指定列</span></span><br><span class="line">data.drop(columns=[<span class="string">&#x27;code&#x27;</span>,<span class="string">&#x27;phone&#x27;</span>],inplace = <span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h1 id="表连接"><a href="#表连接" class="headerlink" title="表连接"></a>表连接</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#横向连接</span></span><br><span class="line">t3 = pd.merge(t1,t2, on = <span class="string">&#x27;id&#x27;</span>, how = <span class="string">&#x27;left&#x27;</span>)</span><br><span class="line"></span><br><span class="line">t3 = pd.merge(t1,t2 left_on = <span class="string">&#x27;id&#x27;</span>, right_on = <span class="string">&#x27;user_id&#x27;</span>, how = <span class="string">&#x27;left&#x27;</span>)</span><br><span class="line"></span><br><span class="line">t3 = pd.merge(t1,t2,on=[<span class="string">&#x27;user_id&#x27;</span>,<span class="string">&#x27;date&#x27;</span>],how=<span class="string">&#x27;left&#x27;</span>)</span><br><span class="line"></span><br><span class="line">t3 = pd.merge(t1[[<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;date&#x27;</span>]],</span><br><span class="line">                t2[[<span class="string">&#x27;id&#x27;</span>, <span class="string">&#x27;amount&#x27;</span>,<span class="string">&#x27;type&#x27;</span>]],</span><br><span class="line">                on = <span class="string">&#x27;id&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#纵向连接</span></span><br><span class="line">df = df1.append(df2)</span><br><span class="line"></span><br><span class="line">df = pd.concat([df1, df2], ignore_index=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><h1 id="筛选数据"><a href="#筛选数据" class="headerlink" title="筛选数据"></a>筛选数据</h1><h2 id="筛选行"><a href="#筛选行" class="headerlink" title="筛选行"></a>筛选行</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#根绝变量的取值筛选行</span></span><br><span class="line">df[df.<span class="built_in">type</span> == <span class="string">&#x27;A&#x27;</span>]</span><br><span class="line">df[df.status != <span class="string">&#x27;C&#x27;</span>]</span><br><span class="line"></span><br><span class="line">df[df[<span class="string">&#x27;type&#x27;</span>].isin([<span class="string">&#x27;W&#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;K&#x27;</span>])]</span><br><span class="line"></span><br><span class="line">df2 = df[(df.date &gt;= <span class="number">20200501</span> ) &amp; (df.date &lt;= <span class="number">20201201</span>)]</span><br><span class="line"></span><br><span class="line">df.query(<span class="string">&#x27;score &gt; 90&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#筛选变量name以M开头的行</span></span><br><span class="line">df[df[<span class="string">&#x27;name&#x27;</span>].<span class="built_in">str</span>.contains(<span class="string">&#x27;[M]+&#x27;</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment">#根据取数窗口筛选行</span></span><br><span class="line">df2 = df[df.dayA &gt; df.dayB][df.dayA &lt; df.dayB + datetime.timedelta(days=<span class="number">365</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment">#loc</span></span><br><span class="line">df.loc[df[<span class="string">&#x27;type&#x27;</span>].isna()==<span class="literal">True</span> &amp; df[<span class="string">&#x27;name&#x27;</span>].notnull()]</span><br><span class="line"></span><br><span class="line">df.loc[df[<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;B&quot;</span>]</span><br><span class="line">df.loc[lc[<span class="string">&quot;type&quot;</span>] == <span class="string">&quot;B&quot;</span>, [<span class="string">&quot;id&quot;</span>, <span class="string">&quot;date&quot;</span>, <span class="string">&quot;amount&quot;</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment">#根据位置筛选行：选取0-199行</span></span><br><span class="line">data.loc[<span class="number">0</span>:<span class="number">200</span>,:]</span><br></pre></td></tr></table></figure><h2 id="筛选列"><a href="#筛选列" class="headerlink" title="筛选列"></a>筛选列</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#选取部分列</span></span><br><span class="line">df2 = df[[<span class="string">&#x27;date&#x27;</span>,<span class="string">&#x27;user&#x27;</span>,<span class="string">&#x27;order&#x27;</span>]]</span><br><span class="line"></span><br><span class="line"><span class="comment">#选取部分列</span></span><br><span class="line">x = data[columns[:-<span class="number">1</span>]]</span><br><span class="line">y = data[columns[-<span class="number">1</span>]]</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本篇整理了部分常用的pandas语句以及简单的数据处理过程。&lt;br&gt;其中包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;导入、导出文件&lt;/li&gt;
&lt;li&gt;查看数据 基础信息&lt;/li&gt;
&lt;li&gt;行列的增删查改和筛选&lt;/li&gt;
&lt;li&gt;表连接&lt;/li&gt;
&lt;li&gt;变量处理&lt;/li&gt;
&lt;li&gt;数</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://feifankoo.github.io/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="python" scheme="https://feifankoo.github.io/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>SQL学习资源推荐</title>
    <link href="https://feifankoo.github.io/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/SQL/sql-1.html"/>
    <id>https://feifankoo.github.io/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/SQL/sql-1.html</id>
    <published>2020-12-25T11:45:45.000Z</published>
    <updated>2020-12-26T15:02:11.667Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">Brainy is the new sexy.</blockquote><h3 id="2019-6"><a href="#2019-6" class="headerlink" title="2019.6"></a>2019.6</h3><ul><li><input checked disabled type="checkbox"> Linux虚拟机中安装Hive</li></ul><hr><p><i class="fa fa-pencil"></i></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote class=&quot;blockquote-center&quot;&gt;Brainy is the new sexy.&lt;/blockquote&gt;



&lt;h3 id=&quot;2019-6&quot;&gt;&lt;a href=&quot;#2019-6&quot; class=&quot;headerlink&quot; title=&quot;20</summary>
      
    
    
    
    <category term="学习资源" scheme="https://feifankoo.github.io/categories/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/"/>
    
    <category term="SQL" scheme="https://feifankoo.github.io/categories/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/SQL/"/>
    
    
  </entry>
  
</feed>
